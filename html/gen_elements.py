TEXT_ELEMENTS = [
	'p',
	'h1',
	'h2',
	'h3',
	'h4',
	'h5',
	'h6',
	'span',
	'b',
	'strong',
	'i',
	'em',
	'title',
	'li',
	'code',
	'summary',
	'th',
	'td',
]

CONTAINER_ELEMENTS = [
	'html',
	'head',
	'body',
	'footer',
	'div',
	'nav',
	'ul',
	'ol',
	'pre',
	'details',
	'table',
	'tr',
]

SIMPLE_ELEMENTS = [
	'hr',
	'br',
]

with open('generated_elements.v', 'w+') as f:
	f.write('// This file is autogenerated by gen_elements.py\nmodule html\n\nimport arrays\n\n')

	for element in TEXT_ELEMENTS:
		f.write('''\
@[inline] pub fn %s(text ElementArg, params ElementParams) HtmlElement {
	return elm('%s', ElementParams{
		...params,
		children: match text {
			HtmlElement { arrays.concat(params.children, text) }
			string { arrays.concat(params.children, text) }
			[]HtmlElementOrString { arrays.append(params.children, text) }
		}
	})
}\n\n''' % (element, element))

	for element in CONTAINER_ELEMENTS:
		f.write('''\
@[inline] pub fn %s(children []HtmlElementOrString, params ElementParams) HtmlElement {
	return elm('%s', ElementParams{
		...params,
		children: arrays.append(children, params.children)
	})
}\n\n''' % (element, element))

	for element in SIMPLE_ELEMENTS:
		f.write('''\
@[inline] pub fn %s(params ElementParams) HtmlElement {
	return elm('%s', ElementParams{
		...params,
		is_self_closing: true
	})
}\n\n''' % (element, element))
